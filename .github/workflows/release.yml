name: Release Truss

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  build:
    name: Build Truss
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - name: Install APT On Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -qq -y
        sudo apt-get install -qq -y libtinfo-dev
        curl -LO http://archive.ubuntu.com/ubuntu/pool/main/libf/libffi/libffi6_3.2.1-8_amd64.deb
        sudo dpkg -i libffi6_3.2.1-8_amd64.deb
    - name: Setup MSVC Paths
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
    - uses: actions/checkout@v2
    - name: Tag Version
      id: set_tag
      run: |
        export VER=$(grep TRUSS_VERSION_STRING src/trussapi.h  | cut -d'"' -f 2)
        echo "::set-output name=tag_name::${VER}"
      shell: bash
    - name: Run CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=release
    - name: Build Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd build
        make -j 4
    - name: Build Windows
      if: matrix.os == 'windows-latest'
      run: |
        cd build
        MSBuild truss.sln /p:Configuration=Release /p:Platform=x64
    - name: Download prebuilt libraries
      run: |
        cd dist
        ./truss dev/downloadlibs.t
    - name: Build shaders
      run: |
        cd dist
        cd shaders
        mkdir glsl
        mkdir mtl
        mkdir dx11
        mkdir spirv
        cd ..
        ./truss dev/buildshaders.moon
    - name: Zip Archive (linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd dist
        zip -r truss.zip font scripts shaders textures
        zip -r "../truss_${{ matrix.os }}.zip" truss lib bin include truss.zip
    - name: Zip Archive (windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd dist
        7z a truss.zip bin lib include scripts shaders textures font models
        7z a "../truss_${{ matrix.os }}.zip" truss.exe truss.zip
    - name: Publish Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: truss_${{ matrix.os }}.zip
        tag: ${{ steps.set_tag.outputs.tag_name }}
        token: ${{ secrets.GITHUB_TOKEN }}
