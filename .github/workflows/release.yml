name: Release Truss

on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build Truss
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - name: Install APT On Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -qq -y
        sudo apt-get install -qq -y libsdl2-dev flex bison libtinfo-dev
    - uses: actions/checkout@v2
    - name: Run CMake
      run: |
        ls
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=release
    - name: Build Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd build
        make
    - name: MSBuild On Windows
      if: matrix.os == 'windows-latest'
      run: |
        cd build
        dir
        "\"C:\\Program Files (x86)\\Microsoft Visual Studio\x819\\Enterprise\\MSBuild\\Current\\Bin\amd64\\MSBuild.exe truss.sln\""
    - name: Prepare Artifacts
      run: |
        zip -r "truss_${{ matrix.os }}.zip" dist/	
        ls 
        ls build
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: truss_release
        path: truss_${{ matrix.os }}.zip


  release:
    name: Create GitHub Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Tag Version
        id: set_tag
        run: |
          export VER=$(grep VERSION src/trussapi.h  | cut -d'"' -f 2)
          echo "::set-output name=tag_name::${VER}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tag.outputs.tag_name }}
          release_name: Release ${{ steps.set_tag.outputs.tag_name }}
          draft: false
          prerelease: false
